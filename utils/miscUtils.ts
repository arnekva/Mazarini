import { ArrayUtils } from './arrayUtils'
import { RandomUtils } from './randomUtils'

const prideReg = new RegExp(
    /(penis)|(sex)|(gay)|(xD)|(:3)|(pls)|(mamma)|(porno)|(j√¶vla)|(dritt)|(komme)|(tinder)|(date)|(p√∏lse)|(eivindpride)|(pride)|(daily)|(rip)|(kekw)|(cat)|(enig)|(komt)/gi
)
const putinReg = new RegExp(
    /(krig)|(ukraina)|(russland)|(invadere)|(invasjon)|(russiske)|(russisk)|(russer)|(russia)|(putin)|(kiev)|(putinpride)|(kyiv)|(europa)|(kina)/gi
)
export namespace MiscUtils {
    export function doesThisMessageNeedAnEivindPride(content: string, polseCounter: number) {
        return Math.random() < 0.1 || polseCounter > 0 || prideReg.test(content)
    }
    export function doesThisMessageNeedAPutinPride(content: string, polseCounter: number) {
        return Math.random() < 0.1 || putinReg.test(content)
    }

    /** Return a matching emoji for the given letter. Some letters have more than one matching emoji (set isSecond to true to get second one), and there can be up to 7 spaces */
    export function findLetterEmoji(sentLetter: string, isSecond?: boolean, spaceCounter?: number) {
        let letter = ''
        switch (sentLetter.toUpperCase()) {
            case 'A':
                letter = isSecond ? 'üÖ∞' : 'üá¶'
                break
            case 'B':
                letter = isSecond ? 'üÖ±' : 'üáß'
                break
            case 'C':
                letter = isSecond ? '¬©Ô∏è' : 'üá®'
                break
            case 'D':
                letter = 'üá©'
                break
            case 'E':
                letter = 'üá™'
                break
            case 'F':
                letter = 'üá´'
                break
            case 'G':
                letter = 'üá¨'
                break
            case 'H':
                letter = 'üá≠'
                break
            case 'I':
                letter = isSecond ? '‚Ñπ' : 'üáÆ'
                break
            case 'J':
                letter = 'üáØ'
                break
            case 'K':
                letter = 'üá∞'
                break
            case 'L':
                letter = 'üá±'
                break
            case 'M':
                letter = isSecond ? '‚ìÇÔ∏è' : 'üá≤'
                break
            case 'N':
                letter = 'üá≥'
                break
            case 'O':
                letter = isSecond ? 'üÖæ' : 'üá¥'
                break
            case 'P':
                letter = isSecond ? 'üÖøÔ∏è' : 'üáµ'
                break
            case 'Q':
                letter = 'üá∂'
                break
            case 'R':
                letter = isSecond ? '¬ÆÔ∏è' : 'üá∑'
                break
            case 'S':
                letter = isSecond ? 'üí≤' : 'üá∏'
                break
            case 'T':
                letter = isSecond ? '‚úùÔ∏è' : 'üáπ'
                break
            case 'U':
                letter = 'üá∫'
                break
            case 'V':
                letter = isSecond ? '‚òëÔ∏è' : 'üáª'
                break
            case 'W':
                letter = 'üáº'
                break
            case 'X':
                letter = isSecond ? '‚úñ' : 'üáΩ'
                break
            case 'Y':
                letter = 'üáæ'
                break
            case 'Z':
                letter = 'üáø'
                break
            case '√Ü':
                letter = 'üà∑Ô∏è'
                break
            case '√ò':
                letter = 'üö´'
                break
            case ' ':
                letter = '‚¨õ'
                if (spaceCounter == 1) letter = 'üü¶'
                if (spaceCounter == 2) letter = 'üü™'
                if (spaceCounter == 3) letter = 'üü•'
                if (spaceCounter == 4) letter = '‚¨ú'
                if (spaceCounter == 5) letter = 'üü´'
                if (spaceCounter == 6) letter = 'üü©'

                break

            case '0':
                letter = '0Ô∏è‚É£'
                break
            case '1':
                letter = '1Ô∏è‚É£'
                break
            case '2':
                letter = '2Ô∏è‚É£'
                break
            case '3':
                letter = '3Ô∏è‚É£'
                break
            case '4':
                letter = '4Ô∏è‚É£'
                break
            case '5':
                letter = '5Ô∏è‚É£'
                break
            case '6':
                letter = '6Ô∏è‚É£'
                break
            case '7':
                letter = '7Ô∏è‚É£'
                break
            case '8':
                letter = '8Ô∏è‚É£'
                break
            case '9':
                letter = '9Ô∏è‚É£'
                break
            case '!':
                letter = isSecond ? '‚ùó' : '‚ùï'
                break
            case '?':
                letter = isSecond ? '‚ùì' : '‚ùî'
                break
            case '$':
                letter = 'üí≤'
                break

            default:
                break
        }
        return letter
    }

    export function findFeseText(author: string | undefined, randomName: string | undefined) {
        const isAuthorVictim = RandomUtils.getRandomPercentage(50)
        return ArrayUtils.randomChoiceFromArray(
            isAuthorVictim ? feseArray(randomName ?? 'Thomas', author ?? 'Thomas') : feseArray(author ?? 'Thomas', randomName ?? 'Thomas')
        )
    }

    export function feseArray(user1: string, user2: string) {
        return [
            `${user1} har fese`,
            `${user1} har skamfese`,
            `${user1} feis p√• ${user2}`,
            `${user1} fise s√• ${user2} riste`,
            `${user1} fise s√• han riste`,
            `${user1} traff ${user2} i fjese`,
            `${user1} blei troffen i fjese av ${user2}`,
            `${user1} feis, men ${user2} brukte speil`,
            `${user1} feis, men ${user2} brukte speil. ${user1} brukte skjold, s√• ${user2} blei fort eid der ja`,
            `${user1} traff ${user2} rett i fleisen`,
            `${user1} va p√• bes√∏g hos ${user2} og nuka dassen`,
            `${user1} lukta ${user2} sin fis, men den som kjente sendte`,
            `${user1} va p√• bes√∏g hos ${user2} og nuka dassen`,
            `${user1} slapp ein silent but deadly ein p√• ${user2} `,
            `${user1}: "Har du fese?". ${user2}: "DEN S√Ö KJENTE SENDTE" `,
            `${user1} feis p√• Thomas`,
            `Yo, ${user1}, gidde du roa deg, eg pr√∏ve √• sova her. Heila huse riste`,
        ]
    }
}
